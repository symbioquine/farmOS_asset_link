export default class ArchiveAssetActionProvider{onLoad(t,e){const a=e.ui.c.VBtn,s=e.util.formatRFC3339;t.defineSlot("net.symbioquine.farmos_asset_link.actions.v0.archive",(t=>{t.type("asset-action"),t.showIf((({asset:t})=>"archived"!==t.attributes.status));const i=async t=>{const a=await e.ui.dialog.confirm(`Are you sure you want to archive "${t.attributes.name}"?`);if(!a)return;await e.entitySource.update((e=>e.updateRecord({type:t.type,id:t.id,attributes:{status:"archived",archived:s(new Date)}})),{label:`Archive asset: ${t.attributes.name}`})};t.componentFn(((t,e,{asset:s})=>e(a,{props:{block:!0,color:"secondary"},on:{click:()=>i(s)},class:"text-none"},"Archive")))})),t.defineSlot("net.symbioquine.farmos_asset_link.actions.v0.unarchive",(t=>{t.type("asset-action"),t.showIf((({asset:t})=>"archived"===t.attributes.status));const s=async t=>{const a=await e.ui.dialog.confirm(`Are you sure you want to unarchive "${t.attributes.name}"?`);if(!a)return;await e.entitySource.update((e=>e.updateRecord({type:t.type,id:t.id,attributes:{status:"active",archived:null}})),{label:`Unarchive asset: ${t.attributes.name}`})};t.componentFn(((t,e,{asset:i})=>e(a,{props:{block:!0,color:"secondary"},on:{click:()=>s(i)},class:"text-none"},"Unarchive")))}))}}