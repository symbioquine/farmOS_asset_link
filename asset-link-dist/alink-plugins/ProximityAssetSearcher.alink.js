export default class ProximityAssetSearcher{searchAssets(t,e,a){if("proximity-search"!==e.type)return;const s=e.coordinates,i=t.util.geohash.encode(s.latitude,s.longitude),r=3;var o=9;s.accuracy>5&&(o=8),s.accuracy>20&&(o=7);const c=this;async function*n(){for(let s=o;s>=r;s--){const r=i.slice(0,s),n=s==o?void 0:i.slice(0,s+1),h=await c._searchAssetsWithGeohashPrefix(t,e,a,r,n);for(let t of h)yield t}}return n()}async _searchAssetsWithGeohashPrefix(t,e,a,s,i){const r=(await t.getAssetTypes()).map((t=>t.attributes.drupal_internal__id)),o="local"===a?t.entitySource.cache:t.entitySource,c=await o.query((t=>r.map((e=>t.findRecords(`asset--${e}`).filter({attribute:"intrinsic_geometry.geohash",op:"CONTAINS",value:s}).sort("drupal_internal__id"))))),n=c.flatMap((t=>t)),h=e.coordinates,l=[];for await(let u of n){const e=u.attributes?.geometry;if(!e||!e.geohash.startsWith(s))continue;if(i&&e.geohash.startsWith(i))continue;const a=t.util.haversine({lat:h.latitude,lng:h.longitude},{lat:e.lat,lng:e.lon});l.push({weight:a,weightText:`~${a.toFixed(2)}m away`,asset:u})}return l.sort(((t,e)=>t.weight-e.weight)),l}}